name: Notify Slack on Issue Creation

on:
  issues:
    types: [opened]

jobs:
  send-notification:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Send notification to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          REPOSITORY_NAME: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_EVENT_ISSUE_HTML_URL: ${{ github.event.issue.html_url }}
        run: |
          python <<EOF
          import os
          import requests
          import json
          headers = {'Content-Type': 'application/json'}
          message = {
              "text": f"New issue created in {os.environ['REPOSITORY_NAME']}: *{os.environ['ISSUE_TITLE']}*\n{os.environ['ISSUE_BODY']}",
              "attachments": [
                  {
                      "fallback": f"Issue created: {os.environ['ISSUE_TITLE']}",
                      "color": "#36a64f",
                      "pretext": "A new issue has been opened",
                      "author_name": os.environ['GITHUB_ACTOR'],
                      "author_link": os.environ['GITHUB_EVENT_ISSUE_HTML_URL'],
                      "author_icon": "https://github.com/github.png",
                      "title": os.environ['ISSUE_TITLE'],
                      "title_link": os.environ['GITHUB_EVENT_ISSUE_HTML_URL'],
                      "text": os.environ['ISSUE_BODY']
                  }
              ]
          }
          response = requests.post(os.environ['SLACK_WEBHOOK_URL'], headers=headers, data=json.dumps(message))
          print(response.text)
          EOF
